#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -Wall -fexceptions
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_DEBUG = $(INC) -Iinclude -Itasks/include -Iinclude/runge_kutta_methods
CFLAGS_DEBUG = $(CFLAGS) -Wnon-virtual-dtor -Winit-self -Wredundant-decls -Wcast-align -Wundef -Wfloat-equal -Wunreachable-code -Wmissing-declarations -Wmissing-include-dirs -Wswitch-enum -Wswitch-default -Weffc++ -Wzero-as-null-pointer-constant -Wmain -pedantic-errors -pedantic -Wextra -Wall -std=c++17 -g -Werror=vla -fdiagnostics-show-option -Wno-div-by-zero -Wuninitialized -Wstack-protector -Wtype-limits -Wimplicit-fallthrough -Wmisleading-indentation -Wswitch -Wswitch-bool -Wswitch-unreachable -Wint-in-bool-context -Wunused-parameter -Wunused-variable -Wunused-value -Wunused -Wpointer-arith -Wcast-qual -Wmissing-field-initializers -Wmissing-noreturn -Wlong-long -Wdisabled-optimization -Wchar-subscripts -Wcomment -Wformat -Wformat-overflow -Wformat-security -Wformat-signedness -Wmissing-braces -Wsequence-point -Wstrict-aliasing=2 -Wwrite-strings -Wmissing-format-attribute -Wnormalized=nfkc -Wpacked -Winvalid-pch -Wvariadic-macros -Wunsafe-loop-optimizations -Wduplicated-branches -Wduplicated-cond -Wtrampolines -Wlogical-op -Wlogical-not-parentheses -Wno-aggressive-loop-optimizations -Wvector-operation-performance
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS) -static-libstdc++ -static-libgcc -static
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/nms_tasks

INC_RELEASE = $(INC) -Iinclude -Itasks/include -Iinclude/runge_kutta_methods
CFLAGS_RELEASE = $(CFLAGS) -fomit-frame-pointer -fexpensive-optimizations -O3 -Wnon-virtual-dtor -Winit-self -Wredundant-decls -Wcast-align -Wundef -Wfloat-equal -Wunreachable-code -Wmissing-declarations -Wmissing-include-dirs -Wswitch-enum -Wswitch-default -Weffc++ -Wzero-as-null-pointer-constant -Wmain -pedantic-errors -pedantic -Wextra -Wall -std=c++17 -Werror=vla -fdiagnostics-show-option -Wno-div-by-zero -Wuninitialized -Werror=vla -fdiagnostics-show-option -Wno-div-by-zero -Wuninitialized -Wstack-protector -Wtype-limits -Wimplicit-fallthrough -Wmisleading-indentation -Wswitch -Wswitch-bool -Wswitch-unreachable -Wint-in-bool-context -Wunused-parameter -Wunused-variable -Wunused-value -Wunused -Wpointer-arith -Wcast-qual -Wmissing-field-initializers -Wmissing-noreturn -Wlong-long -Wdisabled-optimization -Wchar-subscripts -Wcomment -Wformat -Wformat-overflow -Wformat-security -Wformat-signedness -Wmissing-braces -Wsequence-point -Wstrict-aliasing=2 -Wwrite-strings -Wmissing-format-attribute -Wnormalized=nfkc -Wpacked -Winvalid-pch -Wvariadic-macros -Wunsafe-loop-optimizations -Wduplicated-branches -Wduplicated-cond -Wtrampolines -Wlogical-op -Wlogical-not-parentheses -Wno-aggressive-loop-optimizations -Wvector-operation-performance -funroll-loops -fvariable-expansion-in-unroller -fprefetch-loop-arrays -freorder-blocks-and-partition -fno-cprop-registers -funswitch-loops -funsafe-loop-optimizations -march=native -mtune=native -DNDEBUG
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -static-libstdc++ -static-libgcc -static
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/nms_tasks

OBJ_DEBUG = $(OBJDIR_DEBUG)/main_tasks.o $(OBJDIR_DEBUG)/tasks/src/tasks.o $(OBJDIR_DEBUG)/tasks/src/task_wave_equation.o $(OBJDIR_DEBUG)/tasks/src/task_poisson_equation.o $(OBJDIR_DEBUG)/tasks/src/task_ode_system_solution.o $(OBJDIR_DEBUG)/tasks/src/task_heat_conduction_equation.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/main_tasks.o $(OBJDIR_RELEASE)/tasks/src/tasks.o $(OBJDIR_RELEASE)/tasks/src/task_wave_equation.o $(OBJDIR_RELEASE)/tasks/src/task_poisson_equation.o $(OBJDIR_RELEASE)/tasks/src/task_ode_system_solution.o $(OBJDIR_RELEASE)/tasks/src/task_heat_conduction_equation.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)
	test -d $(OBJDIR_DEBUG)/tasks/src || mkdir -p $(OBJDIR_DEBUG)/tasks/src

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/main_tasks.o: main_tasks.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main_tasks.cpp -o $(OBJDIR_DEBUG)/main_tasks.o

$(OBJDIR_DEBUG)/tasks/src/tasks.o: tasks/src/tasks.cxx
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c tasks/src/tasks.cxx -o $(OBJDIR_DEBUG)/tasks/src/tasks.o

$(OBJDIR_DEBUG)/tasks/src/task_wave_equation.o: tasks/src/task_wave_equation.cxx
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c tasks/src/task_wave_equation.cxx -o $(OBJDIR_DEBUG)/tasks/src/task_wave_equation.o

$(OBJDIR_DEBUG)/tasks/src/task_poisson_equation.o: tasks/src/task_poisson_equation.cxx
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c tasks/src/task_poisson_equation.cxx -o $(OBJDIR_DEBUG)/tasks/src/task_poisson_equation.o

$(OBJDIR_DEBUG)/tasks/src/task_ode_system_solution.o: tasks/src/task_ode_system_solution.cxx
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c tasks/src/task_ode_system_solution.cxx -o $(OBJDIR_DEBUG)/tasks/src/task_ode_system_solution.o

$(OBJDIR_DEBUG)/tasks/src/task_heat_conduction_equation.o: tasks/src/task_heat_conduction_equation.cxx
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c tasks/src/task_heat_conduction_equation.cxx -o $(OBJDIR_DEBUG)/tasks/src/task_heat_conduction_equation.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)
	rm -rf $(OBJDIR_DEBUG)/tasks/src

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	test -d $(OBJDIR_RELEASE)/tasks/src || mkdir -p $(OBJDIR_RELEASE)/tasks/src

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/main_tasks.o: main_tasks.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main_tasks.cpp -o $(OBJDIR_RELEASE)/main_tasks.o

$(OBJDIR_RELEASE)/tasks/src/tasks.o: tasks/src/tasks.cxx
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c tasks/src/tasks.cxx -o $(OBJDIR_RELEASE)/tasks/src/tasks.o

$(OBJDIR_RELEASE)/tasks/src/task_wave_equation.o: tasks/src/task_wave_equation.cxx
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c tasks/src/task_wave_equation.cxx -o $(OBJDIR_RELEASE)/tasks/src/task_wave_equation.o

$(OBJDIR_RELEASE)/tasks/src/task_poisson_equation.o: tasks/src/task_poisson_equation.cxx
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c tasks/src/task_poisson_equation.cxx -o $(OBJDIR_RELEASE)/tasks/src/task_poisson_equation.o

$(OBJDIR_RELEASE)/tasks/src/task_ode_system_solution.o: tasks/src/task_ode_system_solution.cxx
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c tasks/src/task_ode_system_solution.cxx -o $(OBJDIR_RELEASE)/tasks/src/task_ode_system_solution.o

$(OBJDIR_RELEASE)/tasks/src/task_heat_conduction_equation.o: tasks/src/task_heat_conduction_equation.cxx
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c tasks/src/task_heat_conduction_equation.cxx -o $(OBJDIR_RELEASE)/tasks/src/task_heat_conduction_equation.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)
	rm -rf $(OBJDIR_RELEASE)/tasks/src

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

